// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protobuf/tensorflow/core/protobuf/saved_model.proto

/*
	Package tensorflow is a generated protocol buffer package.

	It is generated from these files:
		protobuf/tensorflow/core/protobuf/saved_model.proto

	It has these top-level messages:
		SavedModel
*/
package tensorflow

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import tensorflow12 "github.com/d4l3k/pok/tensorflow/core/protobuf"

import fmt "fmt"
import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// SavedModel is the high level serialization format for TensorFlow Models.
// See [todo: doc links, similar to session_bundle] for more information.
type SavedModel struct {
	// The schema version of the SavedModel instance. Used for versioning when
	// making future changes to the specification/implementation. Initial value
	// at release will be 1.
	SavedModelSchemaVersion int64 `protobuf:"varint,1,opt,name=saved_model_schema_version,json=savedModelSchemaVersion,proto3" json:"saved_model_schema_version,omitempty"`
	// One or more MetaGraphs.
	MetaGraphs []*tensorflow12.MetaGraphDef `protobuf:"bytes,2,rep,name=meta_graphs,json=metaGraphs" json:"meta_graphs,omitempty"`
}

func (m *SavedModel) Reset()                    { *m = SavedModel{} }
func (*SavedModel) ProtoMessage()               {}
func (*SavedModel) Descriptor() ([]byte, []int) { return fileDescriptorSavedModel, []int{0} }

func (m *SavedModel) GetSavedModelSchemaVersion() int64 {
	if m != nil {
		return m.SavedModelSchemaVersion
	}
	return 0
}

func (m *SavedModel) GetMetaGraphs() []*tensorflow12.MetaGraphDef {
	if m != nil {
		return m.MetaGraphs
	}
	return nil
}

func init() {
	proto.RegisterType((*SavedModel)(nil), "tensorflow.SavedModel")
}
func (this *SavedModel) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*SavedModel)
	if !ok {
		that2, ok := that.(SavedModel)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if this.SavedModelSchemaVersion != that1.SavedModelSchemaVersion {
		return false
	}
	if len(this.MetaGraphs) != len(that1.MetaGraphs) {
		return false
	}
	for i := range this.MetaGraphs {
		if !this.MetaGraphs[i].Equal(that1.MetaGraphs[i]) {
			return false
		}
	}
	return true
}
func (this *SavedModel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&tensorflow.SavedModel{")
	s = append(s, "SavedModelSchemaVersion: "+fmt.Sprintf("%#v", this.SavedModelSchemaVersion)+",\n")
	if this.MetaGraphs != nil {
		s = append(s, "MetaGraphs: "+fmt.Sprintf("%#v", this.MetaGraphs)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringSavedModel(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *SavedModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SavedModel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.SavedModelSchemaVersion != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintSavedModel(dAtA, i, uint64(m.SavedModelSchemaVersion))
	}
	if len(m.MetaGraphs) > 0 {
		for _, msg := range m.MetaGraphs {
			dAtA[i] = 0x12
			i++
			i = encodeVarintSavedModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeFixed64SavedModel(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32SavedModel(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintSavedModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SavedModel) Size() (n int) {
	var l int
	_ = l
	if m.SavedModelSchemaVersion != 0 {
		n += 1 + sovSavedModel(uint64(m.SavedModelSchemaVersion))
	}
	if len(m.MetaGraphs) > 0 {
		for _, e := range m.MetaGraphs {
			l = e.Size()
			n += 1 + l + sovSavedModel(uint64(l))
		}
	}
	return n
}

func sovSavedModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozSavedModel(x uint64) (n int) {
	return sovSavedModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *SavedModel) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SavedModel{`,
		`SavedModelSchemaVersion:` + fmt.Sprintf("%v", this.SavedModelSchemaVersion) + `,`,
		`MetaGraphs:` + strings.Replace(fmt.Sprintf("%v", this.MetaGraphs), "MetaGraphDef", "tensorflow12.MetaGraphDef", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringSavedModel(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *SavedModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSavedModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SavedModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SavedModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SavedModelSchemaVersion", wireType)
			}
			m.SavedModelSchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SavedModelSchemaVersion |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaGraphs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSavedModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaGraphs = append(m.MetaGraphs, &tensorflow12.MetaGraphDef{})
			if err := m.MetaGraphs[len(m.MetaGraphs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSavedModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSavedModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSavedModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSavedModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSavedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthSavedModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowSavedModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipSavedModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthSavedModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSavedModel   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("protobuf/tensorflow/core/protobuf/saved_model.proto", fileDescriptorSavedModel)
}

var fileDescriptorSavedModel = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0x49, 0xcd, 0x2b, 0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0xd7,
	0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x87, 0x4b, 0x14, 0x27, 0x96, 0xa5, 0xa6, 0xc4, 0xe7, 0xe6, 0xa7,
	0xa4, 0xe6, 0xe8, 0x81, 0x05, 0x85, 0xb8, 0x10, 0x6a, 0xa5, 0x34, 0x71, 0xea, 0xcb, 0x4d, 0x2d,
	0x49, 0x8c, 0x4f, 0x2f, 0x4a, 0x2c, 0xc8, 0x80, 0x68, 0x53, 0x6a, 0x61, 0xe4, 0xe2, 0x0a, 0x06,
	0x19, 0xe6, 0x0b, 0x32, 0x4b, 0xc8, 0x9a, 0x4b, 0x0a, 0xc9, 0xe8, 0xf8, 0xe2, 0xe4, 0x8c, 0xd4,
	0xdc, 0xc4, 0xf8, 0xb2, 0xd4, 0xa2, 0xe2, 0xcc, 0xfc, 0x3c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6,
	0x20, 0xf1, 0x62, 0xb8, 0xfa, 0x60, 0xb0, 0x7c, 0x18, 0x44, 0x5a, 0xc8, 0x92, 0x8b, 0x1b, 0x61,
	0x7e, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x84, 0x1e, 0xc2, 0x31, 0x7a, 0xbe, 0xa9,
	0x25, 0x89, 0xee, 0x20, 0x59, 0x97, 0xd4, 0xb4, 0x20, 0xae, 0x5c, 0x18, 0xaf, 0xd8, 0x29, 0xf6,
	0xc2, 0x43, 0x39, 0x86, 0x1b, 0x0f, 0xe5, 0x18, 0x3e, 0x3c, 0x94, 0x63, 0x6c, 0x78, 0x24, 0xc7,
	0xb8, 0xe2, 0x91, 0x1c, 0xe3, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24,
	0xc7, 0xf8, 0xe2, 0x91, 0x1c, 0xc3, 0x87, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x70, 0x49,
	0xe4, 0x17, 0xa5, 0x23, 0x1b, 0x9b, 0x56, 0x94, 0x98, 0x9b, 0x5a, 0x9e, 0x5f, 0x94, 0xed, 0x24,
	0x80, 0xf0, 0x4b, 0x00, 0xc8, 0x7f, 0xc5, 0x01, 0x8c, 0x3f, 0x18, 0x19, 0x93, 0xd8, 0xc0, 0x9e,
	0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xff, 0x16, 0xfe, 0x13, 0x5a, 0x01, 0x00, 0x00,
}
