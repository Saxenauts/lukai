syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/d4l3k/pok/protobuf/aggregatorpb/aggregator.proto";

package uipb;

message LoginRequest {
  string email = 1;
  string password = 2;
  string remember = 3;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string remember = 3;

  string name = 4;
}

message AuthenticationResponse {
  string token = 1;
}

message ResendEmailRequest {}

message ResendEmailResponse {}

message GetUserRequest {}

message GetUserResponse {
  string email = 1;
  string name = 2;
  bool verified_email = 3;
}

message GetDomainsRequest {}

message GetDomainsResponse {
  repeated Domain domains = 1 [(gogoproto.nullable) = false];
}

message Domain {
  string name = 1;
  repeated ModelType model_types = 2 [(gogoproto.nullable) = false];
}

message ModelType {
  string name = 1;
  string domain = 2;
}

message Model {
  uint64 id = 1;
  string domain = 2;
  string model_type = 3;
  string name = 4;
  string description = 5;
  aggregatorpb.TrainingStatus status = 6;
  string owner_email = 7;
  aggregatorpb.HyperParams hyper_params = 8 [(gogoproto.nullable) = false];
  string model_url = 9;

  google.protobuf.Timestamp created_at = 10 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp updated_at = 11 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message NewDomainRequest {
  string domain = 1;
}

message NewDomainResponse {
  Domain domain = 1 [(gogoproto.nullable) = false];
}

message GetDomainRequest {
  string domain = 1;
}

message GetModelsRequest {
  string domain = 1;
  string model_type = 2;
  string email = 3;
  aggregatorpb.TrainingStatus status = 4;
  bool prod = 5;
  string query = 6;
  int64 count = 7;
  int64 offset = 8;
  string order = 9;
}

message GetModelsResponse {
  repeated Model models = 1 [(gogoproto.nullable) = false];
  int64 total_count = 2;
  int64 count = 3;
  int64 offset = 4;
}

message GetModelRequest {
  uint64 id = 1;
}

message NewAPITokenRequest {
  string duration = 1;
}

service UI {
  rpc Login (LoginRequest) returns (AuthenticationResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }

  rpc Register (RegisterRequest) returns (AuthenticationResponse) {
    option (google.api.http) = {
      post: "/api/v1/register"
      body: "*"
    };
  }

  rpc ResendEmail (ResendEmailRequest) returns (ResendEmailResponse) {
    option (google.api.http) = {
      post: "/api/v1/resend_email"
      body: "*"
    };
  }

  rpc GetUser (GetUserRequest) returns(GetUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/get_user"
    };
  }

  rpc GetDomain (GetDomainRequest) returns(Domain) {
    option (google.api.http) = {
      get: "/api/v1/domain/{domain}"
    };
  }

  rpc GetDomains (GetDomainsRequest) returns(GetDomainsResponse) {
    option (google.api.http) = {
      get: "/api/v1/domain"
    };
  }

  rpc NewDomain (NewDomainRequest) returns(NewDomainResponse) {
    option (google.api.http) = {
      post: "/api/v1/domain/new"
      body: "*"
    };
  }

  rpc NewModelType (ModelType) returns(ModelType) {
    option (google.api.http) = {
      post: "/api/v1/domain/{domain}/model_type/new"
      body: "*"
    };
  }

  rpc GetModelType (ModelType) returns(ModelType) {
    option (google.api.http) = {
      get: "/api/v1/domain/{domain}/model_type/{name}"
    };
  }

  rpc GetModels (GetModelsRequest) returns (GetModelsResponse) {
    option (google.api.http) = {
      get: "/api/v1/model_search"
    };
  }

  rpc CancelModelTraining (aggregatorpb.CancelModelTrainingRequest) returns (aggregatorpb.CancelModelTrainingResponse) {
    option (google.api.http) = {
      post: "/api/v1/model/{id.id}/cancel"
    };
  }

  rpc GetModel (GetModelRequest) returns (Model) {
    option (google.api.http) = {
      get: "/api/v1/model/{id}"
    };
  }

  rpc NewAPIToken (NewAPITokenRequest) returns(AuthenticationResponse) {
    option (google.api.http) = {
      post: "/api/v1/api_token/new"
      body: "*"
    };
  }
}
